@using ViewExtensions

@{
    bool showNameAttribute =
        ((string)(ViewData["configSource"]) == "web.config");

    bool showTypeColumn =
        ((string)(ViewData["configSource"]) != "web.config");
}

    <table class="border">
        @Html.Partial("_OptionsTableHeading",ViewData)
        <tbody>
       @if (showNameAttribute)
       {
            @Html.TableRowHtml("name", "optional", 
            "(empty)",
            @"Name of the logger you want to configure. To configure the root logger, 
              simply omit the <span class=""term"">name</span> attribute.<p/>" +
             Html.Partial("_LoggerRootNameOnServer"))
       }
        @Html.Partial("_SharedFilterTableRows",ViewData)
        @Html.TableRowHtml("appenders", "optional", (showTypeColumn ? "array of appenders" : null), 
            "(inherited from parent logger)",
            @"One or more appenders for the logger to send its log messages to. See the examples.")
        @Html.TableRowHtml("onceOnly", "optional", (showTypeColumn ? "array of strings" : null), 
            "(inherited from parent logger)",
            @"One or more regular expressions. When a message matches a regular expression, then
              any subsequent messages matching that same regular expression will be suppressed. See the remarks and examples.")
        </tbody>
    </table>

    @Html.Partial("_InheritanceAndDefaultLogger",ViewData)
