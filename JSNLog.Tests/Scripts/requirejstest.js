
// Used to test AMD header on jsnlog.js

// Assumes that TestUtil.js has already been loaded

// Note that the call back given to require has only one parameter, JL. This is set to 
// whatever is returned by DummyAppender. This happens to be the JL created by jsnlog, plus the
// DummyAppender.
//
// If we used a second parameter, that would be set to a second "JL" as set by the 
// libs/jsnlog in the required list. However, that JL doesn't have createDummyAppender
// defined.

require(["libs/DummyAppender", "libs/jsnlog"], function (JL) {

    var a0 = JL.createDummyAppender('da1');

    var logger = JL('l2');
    logger.setOptions({ "appenders": [a0] });
    
    JL('l2').log(6000, "msg22 level: 6000, logger: l2"); __timestamp22 = (new Date).getTime();

    TestUtils.Check(a0, 1, [
      {
          l: 6000,
          m: 'msg22 level: 6000, logger: l2',
          n: 'l2',
          t: __timestamp22
      }
    ]
    );

    // The integration tests looks not only for error messages (generated by TestUtils) but also 
    // whether the #running message is still on the page (indicating that the test code crashed).
    $('#running').remove();
});



